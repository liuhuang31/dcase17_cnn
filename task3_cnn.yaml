# ==========================================================
# Flow
# ==========================================================
flow:
  initialize: true
  extract_features: true
  feature_normalizer: true
  train_system: true
  test_system: true
  evaluate_system: true

# ==========================================================
# General
# ==========================================================
general:
  development_dataset: TUTSoundEvents_2017_DevelopmentSet
  challenge_dataset: TUTSoundEvents_2017_EvaluationSet

  overwrite: true              # Overwrite previously stored data 

# ==========================================================
# Paths
# ==========================================================
path:
  data: data_17k
  base: system/task3_01_cnn/
  features: features/
  feature_normalizers: feature_normalizers/
  models: acoustic_models/
  results: evaluation_results/

  challenge_results: challenge_submission/task_3_sound_event_detection_in_real_life_audio/

# ==========================================================
# Feature extraction
# ==========================================================
features:
  fs: 16000
  win_length_seconds: 0.040
  hop_length_seconds: 0.020

  include_mfcc0: false
  include_delta: true
  include_acceleration: true
  cmvn: true


  mfcc:
    window: hamming_asymmetric  # [hann_asymmetric, hamming_asymmetric]
    n_mfcc: 40                  # Number of MFCC coefficients
    n_mels: 40                  # Number of MEL bands used
    n_fft: 640                 # FFT length
    fmin: 0                     # Minimum frequency when constructing MEL bands
    fmax: 8000                  # Maximum frequency when constructing MEL band
    htk: false                  # Switch for HTK-styled MEL-frequency equation
    ftype: mel_fbank            # mfcc, mel_fbank or raw_spec
    
  mfcc_delta:
    width: 15

  mfcc_acceleration:
    width: 15

# ==========================================================
# Classifier
# ==========================================================
classifier:
  method: cnn                 # The system supports only gmm
  parameters: !!null            # Parameters are copied from classifier_parameters based on defined method

classifier_parameters:
  gmm:
    n_components: 2            # Number of Gaussian components
    covariance_type: diag       # [diag|full] Diagonal or full covariance matrix
    random_state: 0
    thresh: !!null
    tol: 0.001
    min_covar: 0.001
    n_iter: 40
    n_init: 1
    params: wmc
    init_params: wmc
  cnn:
    splice: 30
    step: 30
    epochs: 100
    batch_size: 200
    lr: 0.001
    class_weights: false
# ==========================================================
# Detector
# ==========================================================
detector:
  decision_threshold: 160.0
  smoothing_window_length: 1.0  # seconds
  minimum_event_length: 0.05     # seconds
  minimum_event_gap: 0.1        # seconds
  splice: 30  # must be the same as in training
